services:
  # Command Database (PostgreSQL)
  command-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: command_db
      POSTGRES_USER: cqrs_user
      POSTGRES_PASSWORD: cqrs_password
    ports:
      - "5432:5432"
    volumes:
      - command_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cqrs_user -d command_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Query Database (MongoDB)
  query-db:
    image: mongo:7.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: cqrs_user
      MONGO_INITDB_ROOT_PASSWORD: cqrs_password
      MONGO_INITDB_DATABASE: query_db
    ports:
      - "27017:27017"
    volumes:
      - query_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Event Bus (Redis)
  event-bus:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Command Service
  command-service:
    build:
      context: ./command-service
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://cqrs_user:cqrs_password@command-db:5432/command_db
      - REDIS_URL=redis://event-bus:6379
    depends_on:
      command-db:
        condition: service_healthy
      event-bus:
        condition: service_healthy
    volumes:
      - ./command-service:/app
    restart: unless-stopped

  # Query Service
  query-service:
    build:
      context: ./query-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - MONGODB_URL=mongodb://cqrs_user:cqrs_password@query-db:27017/query_db?authSource=admin
      - REDIS_URL=redis://event-bus:6379
    depends_on:
      query-db:
        condition: service_healthy
      event-bus:
        condition: service_healthy
    volumes:
      - ./query-service:/app
    restart: unless-stopped

  # Web UI
  web-ui:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./web-ui:/usr/share/nginx/html
    depends_on:
      - command-service
      - query-service

volumes:
  command_data:
  query_data:
  redis_data:
