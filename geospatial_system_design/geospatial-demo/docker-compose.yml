version: '3.8'
services:
  redis:
    image: redis/redis-stack:7.2.0-v9
    ports:
      - "6379:6379"
      - "8001:8001"
    environment:
      REDIS_ARGS: "--save 20 1 --loglevel warning"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  postgres:
    image: postgis/postgis:16-3.4-alpine
    environment:
      POSTGRES_DB: geospatial
      POSTGRES_USER: geo_user
      POSTGRES_PASSWORD: geo_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geo_user -d geospatial"]
      interval: 5s
      timeout: 3s
      retries: 5

  location-service:
    build:
      context: ./services/location-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  geofence-service:
    build:
      context: ./services/geofence-service
      dockerfile: Dockerfile
    ports:
      - "8003:8001"
    environment:
      DATABASE_URL: postgresql://geo_user:geo_pass@postgres:5432/geospatial
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  proximity-service:
    build:
      context: ./services/proximity-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      REDIS_URL: redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  web-dashboard:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_WS_URL: ws://localhost:8000
    depends_on:
      - location-service
      - geofence-service
      - proximity-service

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web-dashboard
      - location-service
      - geofence-service
      - proximity-service

volumes:
  redis_data:
  postgres_data:
