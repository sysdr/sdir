version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: iam_db
      POSTGRES_USER: iam_user
      POSTGRES_PASSWORD: iam_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iam_user -d iam_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  auth-server:
    build: ./auth-server
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=iam_db
      - DB_USER=iam_user
      - DB_PASSWORD=iam_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key-change-in-production
      - JWT_ACCESS_EXPIRY=300
      - JWT_REFRESH_EXPIRY=86400
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  resource-server:
    build: ./resource-server
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=iam_db
      - DB_USER=iam_user
      - DB_PASSWORD=iam_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key-change-in-production
      - AUTH_SERVER_URL=http://auth-server:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  dashboard:
    build: ./dashboard-server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - AUTH_SERVER_URL=http://auth-server:3001
      - RESOURCE_SERVER_URL=http://resource-server:3002
    depends_on:
      - auth-server
      - resource-server

volumes:
  postgres_data:
