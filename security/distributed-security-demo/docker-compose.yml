version: '3.8'

services:
  # Core Services
  api-gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.api-gateway
    ports:
      - "8000:8000"
    volumes:
      - ./certs:/app/certs:ro
      - ./logs:/app/logs
    environment:
      - SERVICE_NAME=api-gateway
      - SECURITY_ENABLED=true
    networks:
      - secure-network
    depends_on:
      - security-monitor
      - prometheus

  user-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.service
    ports:
      - "8001:8001"
    volumes:
      - ./certs:/app/certs:ro
      - ./logs:/app/logs
    environment:
      - SERVICE_NAME=user-service
      - SERVICE_PORT=8001
      - SECURITY_ENABLED=true
    networks:
      - secure-network

  order-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.service
    ports:
      - "8002:8002"
    volumes:
      - ./certs:/app/certs:ro
      - ./logs:/app/logs
    environment:
      - SERVICE_NAME=order-service
      - SERVICE_PORT=8002
      - SECURITY_ENABLED=true
    networks:
      - secure-network

  payment-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.service
    ports:
      - "8003:8003"
    volumes:
      - ./certs:/app/certs:ro
      - ./logs:/app/logs
    environment:
      - SERVICE_NAME=payment-service
      - SERVICE_PORT=8003
      - SECURITY_ENABLED=true
    networks:
      - secure-network

  # Security and Monitoring
  security-monitor:
    build:
      context: .
      dockerfile: docker/Dockerfile.security
    ports:
      - "8080:8080"
    volumes:
      - ./certs:/app/certs:ro
      - ./logs:/app/logs
    environment:
      - SERVICE_NAME=security-monitor
    networks:
      - secure-network

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - secure-network

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./config/grafana:/etc/grafana/provisioning:ro
    networks:
      - secure-network

  # Attack Simulation
  attack-simulator:
    build:
      context: .
      dockerfile: docker/Dockerfile.attacker
    volumes:
      - ./logs:/app/logs
    environment:
      - TARGET_HOST=api-gateway
      - TARGET_PORT=8000
    networks:
      - secure-network
    profiles:
      - attack

networks:
  secure-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus_data:
  grafana_data:
