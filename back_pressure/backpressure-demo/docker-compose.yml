
services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  backend-service:
    build: .
    command: python services/backend_service.py
    ports:
      - "8001:8001"
    environment:
      - SERVICE_NAME=backend-service
      - SERVICE_PORT=8001
      - REDIS_HOST=redis
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  gateway-service:
    build: .
    command: python services/gateway_service.py
    ports:
      - "8000:8000"
    environment:
      - SERVICE_NAME=gateway-service
      - SERVICE_PORT=8000
      - REDIS_HOST=redis
      - BACKEND_URL=http://backend-service:8001
    depends_on:
      backend-service:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  web-dashboard:
    build: .
    command: python web/dashboard.py
    ports:
      - "3000:3000"
    environment:
      - REDIS_HOST=redis
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs

  load-generator:
    build: .
    command: sh -c "sleep 45 && python services/load_generator.py"
    environment:
      - GATEWAY_URL=http://gateway-service:8000
      - REDIS_HOST=redis
    depends_on:
      gateway-service:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs

volumes:
  redis_data:
