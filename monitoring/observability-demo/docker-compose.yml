version: '3.8'

services:
  # Observability Stack
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: observability-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.0.0
    container_name: observability-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:1.47
    container_name: observability-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
      - "6831:6831/udp"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: unless-stopped

  loki:
    image: grafana/loki:2.8.0
    container_name: observability-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  # Application Services
  user-service:
    build: ./services/user-service
    container_name: observability-user-service
    environment:
      - SERVICE_NAME=user-service
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    ports:
      - "8001:8000"
    depends_on:
      - jaeger
      - prometheus
    restart: unless-stopped

  payment-service:
    build: ./services/payment-service
    container_name: observability-payment-service
    environment:
      - SERVICE_NAME=payment-service
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    ports:
      - "8002:8000"
    depends_on:
      - jaeger
      - prometheus
    restart: unless-stopped

  order-service:
    build: ./services/order-service
    container_name: observability-order-service
    environment:
      - SERVICE_NAME=order-service
      - JAEGER_AGENT_HOST=jaeger  
      - JAEGER_AGENT_PORT=6831
    ports:
      - "8003:8000"
    depends_on:
      - jaeger
      - prometheus
      - user-service
      - payment-service
    restart: unless-stopped

  web-ui:
    build: ./services/web-ui
    container_name: observability-web-ui
    ports:
      - "8080:8080"
    environment:
      - USER_SERVICE_URL=http://user-service:8000
      - PAYMENT_SERVICE_URL=http://payment-service:8000
      - ORDER_SERVICE_URL=http://order-service:8000
    depends_on:
      - user-service
      - payment-service
      - order-service
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: observability-network
