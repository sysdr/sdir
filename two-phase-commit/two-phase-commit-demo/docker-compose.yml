version: '3.8'

services:
  # Transaction Coordinator
  coordinator:
    build: ./coordinator
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
    volumes:
      - ./logs:/app/logs
      - ./coordinator/data:/app/data
    networks:
      - transaction-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # Payment Service (Participant 1)
  payment-service:
    build: ./participant
    ports:
      - "8001:8000"
    environment:
      - SERVICE_NAME=payment-service
      - SERVICE_PORT=8000
      - COORDINATOR_URL=http://coordinator:8000
      - FAILURE_RATE=0.1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
    networks:
      - transaction-network
    restart: unless-stopped

  # Inventory Service (Participant 2)
  inventory-service:
    build: ./participant
    ports:
      - "8002:8000"
    environment:
      - SERVICE_NAME=inventory-service
      - SERVICE_PORT=8000
      - COORDINATOR_URL=http://coordinator:8000
      - FAILURE_RATE=0.05
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
    networks:
      - transaction-network
    restart: unless-stopped

  # Shipping Service (Participant 3)
  shipping-service:
    build: ./participant
    ports:
      - "8003:8000"
    environment:
      - SERVICE_NAME=shipping-service
      - SERVICE_PORT=8000
      - COORDINATOR_URL=http://coordinator:8000
      - FAILURE_RATE=0.15
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
    networks:
      - transaction-network
    restart: unless-stopped

  # Web UI
  web-ui:
    build: ./web-ui
    ports:
      - "3000:3000"
    environment:
      - COORDINATOR_URL=http://coordinator:8000
    networks:
      - transaction-network
    depends_on:
      - coordinator
    restart: unless-stopped

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - transaction-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    networks:
      - transaction-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  transaction-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
  grafana-data:
