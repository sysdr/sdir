version: '3.8'

services:
  chaos-platform:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - PYTHONPATH=/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8001:8001"
    command: ["python", "-c", "from src.mock_services import MockService; MockService('user-service', 8001).start()"]
    environment:
      - PYTHONPATH=/app/src

  order-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8002:8002"
    command: ["python", "-c", "from src.mock_services import MockService; MockService('order-service', 8002).start()"]
    environment:
      - PYTHONPATH=/app/src

  payment-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8003:8003"
    command: ["python", "-c", "from src.mock_services import MockService; MockService('payment-service', 8003).start()"]
    environment:
      - PYTHONPATH=/app/src

  inventory-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8004:8004"
    command: ["python", "-c", "from src.mock_services import MockService; MockService('inventory-service', 8004).start()"]
    environment:
      - PYTHONPATH=/app/src
