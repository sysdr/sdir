version: '3.8'
services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  backend-service:
    build: 
      context: ./services/backend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/health')"]
      interval: 10s
      timeout: 5s
      retries: 3

  gateway-service:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - BACKEND_URL=http://backend-service:8001
      - REDIS_URL=redis://redis:6379
    depends_on:
      backend-service:
        condition: service_healthy

  load-generator:
    build:
      context: ./services/load-generator
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - GATEWAY_URL=http://gateway-service:8000
    depends_on:
      - gateway-service

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_GATEWAY_URL=http://localhost:8000
      - REACT_APP_PROMETHEUS_URL=http://localhost:9090
    depends_on:
      - prometheus
